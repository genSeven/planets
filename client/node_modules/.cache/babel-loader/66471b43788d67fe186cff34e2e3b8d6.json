{"ast":null,"code":"const apiUrl = \"http://localhost:5500/api/v1\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  const data = await fetch(`${apiUrl}/planets`).then(() => {\n    return data;\n  }).catch(error => {\n    console.log(error);\n  }); // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {// TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {// TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/home/saiman/Desktop/planets/client/src/hooks/requests.js"],"names":["apiUrl","httpGetPlanets","data","fetch","then","catch","error","console","log","httpGetLaunches","httpSubmitLaunch","launch","httpAbortLaunch","id"],"mappings":"AAAA,MAAMA,MAAM,GAAG,8BAAf;;AACA,eAAeC,cAAf,GAAgC;AAE9B;AACA,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,UAAX,CAAL,CAA2BI,IAA3B,CAAgC,MAAI;AACrD,WAAQF,IAAR;AACD,GAFkB,EAEhBG,KAFgB,CAETC,KAAD,IAAS;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,GAFnB,CAAnB,CAH8B,CAM9B;AAED;;AAED,eAAeG,eAAf,GAAiC,CAC/B;AACA;AACD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC,CACtC;AACA;AACD;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SACEZ,cADF,EAEEQ,eAFF,EAGEC,gBAHF,EAIEE,eAJF","sourcesContent":["const apiUrl = \"http://localhost:5500/api/v1\";\nasync function httpGetPlanets() {\n \n  // TODO: Once API is ready.\n  const data = await fetch(`${apiUrl}/planets`).then(()=>{\n    return  data;\n  }).catch((error)=>{console.log(error)});\n  // Load planets and return as JSON.\n  \n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}