{"ast":null,"code":"const apiUrl = \"http://localhost:5500/api/v1\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  const data = await fetch(`${apiUrl}/planets`); // Load planets and return as JSON.\n\n  return await data.json();\n}\n\nasync function httpGetLaunches(launch) {\n  // TODO: Once API is ready.\n  const response = await fetch(`${apiUrl}/launch`);\n  const fetched = await response.json();\n  return fetched.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  }); // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {// TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/home/saiman/Desktop/planets/client/src/hooks/requests.js"],"names":["apiUrl","httpGetPlanets","data","fetch","json","httpGetLaunches","launch","response","fetched","sort","a","b","flightNumber","httpSubmitLaunch","httpAbortLaunch","id"],"mappings":"AAAA,MAAMA,MAAM,GAAG,8BAAf;;AACA,eAAeC,cAAf,GAAgC;AAE9B;AACA,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,UAAX,CAAxB,CAH8B,CAI9B;;AACA,SAAO,MAAME,IAAI,CAACE,IAAL,EAAb;AACD;;AAED,eAAeC,eAAf,CAA+BC,MAA/B,EAAuC;AACrC;AACF,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAAE,GAAEH,MAAO,SAAX,CAA5B;AACA,QAAMQ,OAAO,GAAG,MAAMD,QAAQ,CAACH,IAAT,EAAtB;AACA,SAAOI,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAGC,CAAH,KAAO;AACzB,WAAOD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;AACD,GAFM,CAAP,CAJuC,CAOrC;AACD;;AAED,eAAeC,gBAAf,CAAgCP,MAAhC,EAAwC,CACtC;AACA;AACD;;AAED,eAAeQ,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SACEd,cADF,EAEEI,eAFF,EAGEQ,gBAHF,EAIEC,eAJF","sourcesContent":["const apiUrl = \"http://localhost:5500/api/v1\";\nasync function httpGetPlanets() {\n \n  // TODO: Once API is ready.\n  const data = await fetch(`${apiUrl}/planets`);\n  // Load planets and return as JSON.\n  return await data.json();\n}\n\nasync function httpGetLaunches(launch) {\n  // TODO: Once API is ready.\nconst response = await fetch(`${apiUrl}/launch`);\nconst fetched = await response.json();\nreturn fetched.sort((a,b)=>{\n  return a.flightNumber - b.flightNumber;\n});\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}