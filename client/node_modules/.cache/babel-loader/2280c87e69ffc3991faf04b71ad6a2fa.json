{"ast":null,"code":"import { response } from \"../../../server/src/app\";\nconst apiUrl = \"http://localhost:5500/api/v1\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  const data = await fetch(`${apiUrl}/planets`); // Load planets and return as JSON.\n\n  return await data.json();\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  const response = await fetch(`${apiUrl}/launch`);\n  const fetched = await response.json();\n  return fetched.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  }); // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  try {\n    return await fetch(`${apiUrl}/lauch`, {\n      method: \"POST\",\n      header: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (error) {\n    response.ok = false;\n  } // Submit given launch data to launch system.\n\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/home/saiman/Desktop/planets/client/src/hooks/requests.js"],"names":["response","apiUrl","httpGetPlanets","data","fetch","json","httpGetLaunches","fetched","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","header","body","JSON","stringify","error","ok","httpAbortLaunch","id"],"mappings":"AAAA,SAASA,QAAT,QAAyB,yBAAzB;AAEA,MAAMC,MAAM,GAAG,8BAAf;;AACA,eAAeC,cAAf,GAAgC;AAE9B;AACA,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,UAAX,CAAxB,CAH8B,CAI9B;;AACA,SAAO,MAAME,IAAI,CAACE,IAAL,EAAb;AACD;;AAED,eAAeC,eAAf,GAAiC;AAC/B;AACF,QAAMN,QAAQ,GAAG,MAAMI,KAAK,CAAE,GAAEH,MAAO,SAAX,CAA5B;AACA,QAAMM,OAAO,GAAG,MAAMP,QAAQ,CAACK,IAAT,EAAtB;AACA,SAAOE,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAGC,CAAH,KAAO;AACzB,WAAOD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;AACD,GAFM,CAAP,CAJiC,CAO/B;AACD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;AACtC;AACF,MAAI;AACF,WAAO,MAAMT,KAAK,CAAE,GAAEH,MAAO,QAAX,EAAmB;AACnCa,MAAAA,MAAM,EAAC,MAD4B;AAEnCC,MAAAA,MAAM,EAAC;AAAC,wBAAe;AAAhB,OAF4B;AAGnCC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,MAAf;AAH8B,KAAnB,CAAlB;AAKD,GAND,CAME,OAAOM,KAAP,EAAc;AACdnB,IAAAA,QAAQ,CAACoB,EAAT,GAAc,KAAd;AACD,GAVuC,CAWtC;;AACD;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SACEpB,cADF,EAEEI,eAFF,EAGEM,gBAHF,EAIES,eAJF","sourcesContent":["import { response } from \"../../../server/src/app\";\n\nconst apiUrl = \"http://localhost:5500/api/v1\";\nasync function httpGetPlanets() {\n \n  // TODO: Once API is ready.\n  const data = await fetch(`${apiUrl}/planets`);\n  // Load planets and return as JSON.\n  return await data.json();\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\nconst response = await fetch(`${apiUrl}/launch`);\nconst fetched = await response.json();\nreturn fetched.sort((a,b)=>{\n  return a.flightNumber - b.flightNumber;\n});\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\ntry {\n  return await fetch(`${apiUrl}/lauch`,{\n    method:\"POST\",\n    header:{\"Content-Type\":\"application/json\"},\n    body:JSON.stringify(launch),\n  });\n} catch (error) {\n  response.ok = false;\n}\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}